name: "[WC] Update Java"
#description: "Updates maven wrapper and maven dependencies of pom file"

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "[ref] e.g. branch, tag or commit to checkout [default: github_ref_name || github_head_ref ]"
        required: false
    # Map the workflow outputs to job outputs
    outputs:
      has_changes:
        description: "[Boolean] if git status has changes"
        value: ${{ jobs.update.outputs.has_changes }}
      change_type:
        description: "[String] Change Type [major, minor, patch, rc]"
        value: ${{ jobs.update.outputs.project_version }}
      java_version:
        description: "[String] java version from pom file"
        value: ${{ jobs.update.outputs.java_version }}
      project_version:
        description: "[String] project version from pom file"
        value: ${{ jobs.update.outputs.project_version }}
      builder_name:
        description: "[String] [maven, gradle]"
        value: ${{ jobs.update.outputs.builder_name }}

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Map the job outputs to step outputs
    outputs:
      has_changes: ${{ steps.git_info.outputs.has_changes }}
      change_type: ${{ steps.git_info.outputs.change_type }}
      java_version: ${{ steps.java_info.outputs.java_version }}
      project_version: ${{ steps.java_info.outputs.project_version }}
      builder_name: ${{ steps.java_info.outputs.builder_name }}
    steps:
      - name: "Checkout [${{ inputs.ref || github.ref_name || github.head_ref }}]"
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          ref: ${{ inputs.ref || github.ref_name || github.head_ref }}
      - name: "Read Java Info"
        id: "java_info"
        uses: YunaBraska/java-info-action@main
      - name: "Setup Java [${{ steps.java_info.outputs.java_version }}]"
        uses: actions/setup-java@main
        with:
          java-version: ${{ steps.java_info.outputs.java_version }}
          distribution: 'adopt'
      - name: "Update [${{ steps.java_info.outputs.builder_name }}]"
        run: |
          ${{ steps.java_info.outputs.cmd_update_wrapper }}
          ${{ steps.java_info.outputs.cmd_update_plugs }}
          ${{ steps.java_info.outputs.cmd_update_props }}    
          ${{ steps.java_info.outputs.cmd_update_parent }}
      - name: "Test & Build [${{ steps.java_info.outputs.builder_name }}]"
        run: ${{ steps.java_info.outputs.cmd_test_build }}
      - name: "Update Java Badges"
        uses: YunaBraska/java-info-action@main
        with:
          deep: -1
      - name: "Update License Badges"
        id: "license_info"
        if: ${{ steps.java_info.outputs.is_maven == 'true' }}
        uses: YunaBraska/maven-license-info-action@main
        with:
          exclude-scopes: 'test,provided,system'
          output-dir: 'docs/licenses'
      - name: "Read Git Info"
        id: "git_info"
        uses: YunaBraska/git-info-action@main
      - name: "Test & Build [${{ steps.java_info.outputs.builder_name }}]"
        run: ${{ steps.java_info.outputs.cmd_test_build }}
        if: steps.git_info.outputs.has_local_changes == 'true'
      - name: "Push changes [${{ steps.git_info.outputs.has_local_changes == 'true' }}]"
        if: steps.git_info.outputs.has_local_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@master
        with:
          commit_message: "chore: ðŸ”¨ updated dependencies"
          commit_user_name: "Kira"
          commit_user_email: "kira@yuna.berlin"
          commit_author: "Kira <kira@yuna.berlin>"
          skip_dirty_check: true
          skip_fetch: true
          skip_checkout: true
          disable_globbing: true
          create_branch: false
