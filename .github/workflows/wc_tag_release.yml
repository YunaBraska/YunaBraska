name: "[WC] Release Tag"
#description: "Designed to work on the default branch"

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      changelog:
        description: "[String] change log from release message"
        value: ${{ jobs.release.outputs.changelog }}
      latest_tag:
        description: "[String] latest tag"
        value: ${{ jobs.release.outputs.latest_tag }}
      second_latest_tag:
        description: "[String] second latest tag"
        value: ${{ jobs.release.outputs.second_latest_tag }}
jobs:
  release:
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
      latest_tag: ${{ steps.changelog.outputs.latest_tag }}
      second_latest_tag: ${{ steps.changelog.outputs.second_latest_tag }}
    steps:
      - name: "Check Permission"
        run: |
          if [ "$GITHUB_ACTOR" != "YunaBraska" ]; then echo "Permission denied for user [$GITHUB_ACTOR]"; exit 1; fi
      - name: "Checkout"
        uses: actions/checkout@main
        with:
          fetch-depth: 500
          ref: ${{ github.ref_name || github.head_ref }}
      - name: "[Release] Get changelog"
        id: "changelog"
        run: |
          git fetch --all --tags
          latest_tag=$(git tag --sort=-creatordate | head -1)
          echo "latest_tag [$latest_tag]"
          echo "::set-output name=name::$latest_tag"
          
          second_latest_tag=$(git tag --sort=-creatordate | head -2 | tail -1)
          echo "second_latest_tag [$second_latest_tag]"
          echo "::set-output name=name::$second_latest_tag"
          
          mkdir -p target
          if [[ "$latest_tag" == "$second_latest_tag" ]]; then 
            git log --pretty=format:'- %s%n' > target/release.log
          else 
           git log --pretty=format:'- %s%n' $latest_tag..$second_latest_tag > target/release.log
          fi
          
          changelog=$(cat target/release.log)
          echo "changelog [$changelog]"
          echo "::set-output name=changelog::$changelog))"
      - name: "[Release] create"
        if: env.HAS_RELEASE_BRANCH == 'true'
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.changelog.outputs.latest_tag }}
          artifacts: "target/*.jar,build/*.jar"
          generateReleaseNotes: true
          bodyFile: target/release.log
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Remove release branch"
        run: |
          git push --delete origin release &>/dev/null || true
  release_outputs:
    needs: "release"
    runs-on: ubuntu-latest
    steps:
      - name: "print"
        run: |
          echo "---------- OUTPUTS ----------"
          echo "changelog [${{needs.release.outputs.changelog}}]"
          echo "latest_tag [${{needs.release.outputs.latest_tag}}]"
          echo "second_latest_tag [${{needs.release.outputs.second_latest_tag}}]"
          echo "----------- ENVS -----------"
          env
