name: "PUBLISH"

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "[ref] e.g. branch, tag or commit to checkout [default: github.ref_name || github.head_ref ]"
        required: false
      mastodon_suffix:
        type: string
        description: "[mastodon_suffix] e.g. #GitHubActions #java #maven #gradle #workflow #github #githubactions #githubaction @github [default: '']"
        required: false
    secrets:
      CI_WORKFLOW_TOKEN:
        required: false
      CC_TEST_REPORTER_ID:
        required: false
      MASTODON_ACCESS_TOKEN:
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout [${{ inputs.ref || github.ref_name || github.head_ref }}]"
        uses: actions/checkout@main
        with:
          ref: ${{ inputs.ref || github.ref_name || github.head_ref }}
          token: ${{ secrets.CI_WORKFLOW_TOKEN || secrets.CI_TOKEN || github.token }}
          fetch-depth: 500
      - name: "Setup Node [16]"
        uses: actions/setup-node@main
        with:
          node-version: "16"
          cache: npm
      - name: "update dependencies"
        run: |
          npm outdated || true
          npm update --save
          npm audit fix --force
      - name: "Run Tests"
        run: |
          npm ci && npm run test
      - name: "Read Git Info"
        id: "git_info"
        uses: YunaBraska/git-info-action@main
      - name: "Get Semver Info [${{ steps.git_info.outputs.tag_latest }}]"
        id: "semver_info"
        uses: YunaBraska/semver-info-action@main
        with:
          semver-a: ${{ steps.git_info.outputs.tag_latest }}
          semver-b: ${{ steps.git_info.outputs.tag_latest }}
          increase-a: ${{ steps.git_info.outputs.change_type || 'patch' }}
      - name: "Push changes [${{ steps.semver_info.outputs.clean_semver }}] [${{ steps.git_info.outputs.has_local_changes == 'true' }}]"
        if: steps.git_info.outputs.has_local_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@master
        with:
          commit_message: "chore: üè∑Ô∏è new version [${{ steps.semver_info.outputs.clean_semver }}]"
          commit_user_name: "Kira"
          commit_user_email: "kira@yuna.berlin"
          commit_author: "Kira <kira@yuna.berlin>"
          tagging_message: ${{ steps.semver_info.outputs.clean_semver }}
          skip_dirty_check: true
          skip_fetch: true
          skip_checkout: true
          disable_globbing: true
          create_branch: false
      - name: "Create GitHub Release [${{ steps.git_info.outputs.has_changes == 'true' || steps.git_info.outputs.has_local_changes == 'true' }}]"
        if: steps.git_info.outputs.has_changes == 'true' || steps.git_info.outputs.has_local_changes == 'true'
        uses: ncipollo/release-action@main
        with:
          makeLatest: true
          generateReleaseNotes: true
          body: ${{ steps.git_info.outputs.commit_type_feat }}
          tag: ${{ steps.semver_info.outputs.clean_semver }}
          token: ${{ secrets.CI_WORKFLOW_TOKEN || secrets.CI_TOKEN || github.token }}
      - name: "Publish code quality [${{ steps.git_info.outputs.has_changes == 'true' || steps.git_info.outputs.has_local_changes == 'true' }}]"
        uses: paambaati/codeclimate-action@v3.2.0
        if: |
          env.CC_TEST_REPORTER_ID != '' &&
          (steps.git_info.outputs.has_changes == 'true' || steps.git_info.outputs.has_local_changes == 'true')
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: ${{ github.workspace }}/coverage/*.lcov:lcov
      - name: "Send toot to Mastodon [${{ steps.git_info.outputs.commit_type_feat != '' }}]"
        if: env.MASTODON_ACCESS_TOKEN != '' && steps.git_info.outputs.change_log_type_feat != ''
        uses: cbrgm/mastodon-github-action@main
        with:
          message: "${{ steps.git_info.outputs.repo_name }} ${{ steps.semver_info.outputs.clean_semver }} üéâ ${{ steps.git_info.outputs.change_log_type_feat }} Try it out! https://github.com/marketplace/actions/${{ steps.git_info.outputs.repo_name }} ${{ inputs.mastodon_suffix || '' }}"
          visibility: "public"
        env:
          MASTODON_URL: https://hachyderm.io
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }} # access token
